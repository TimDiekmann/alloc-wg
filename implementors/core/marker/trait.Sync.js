(function() {var implementors = {};
implementors["alloc_wg"] = [{"text":"impl&lt;T:&nbsp;?Sized, A&gt; Sync for Box&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TryReserveError","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for String&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for FromUtf8Error&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FromUtf16Error","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; Sync for Vec&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, A&gt; Sync for Splice&lt;'a, I, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F, A&gt; Sync for DrainFilter&lt;'a, T, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;AllocRef, '_&gt; Sync for Drain&lt;'_, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync, A:&nbsp;Send + AllocRef&gt; Sync for IntoIter&lt;T, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync, A:&nbsp;AllocRef, '_&gt; Sync for Drain&lt;'_, T, A&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()