(function() {var implementors = {};
implementors["alloc_wg"] = [{"text":"impl&lt;K:&nbsp;Ord, V, A:&nbsp;AllocRef&gt; Extend&lt;(K, V)&gt; for BTreeMap&lt;K, V, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;Ord + Copy, V:&nbsp;Copy, A:&nbsp;AllocRef&gt; Extend&lt;(&amp;'a K, &amp;'a V)&gt; for BTreeMap&lt;K, V, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord, A:&nbsp;AllocRef&gt; Extend&lt;T&gt; for BTreeSet&lt;T, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;'a + Ord + Copy, A:&nbsp;AllocRef&gt; Extend&lt;&amp;'a T&gt; for BTreeSet&lt;T, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;AllocRef&gt; Extend&lt;char&gt; for String&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, A:&nbsp;AllocRef&gt; Extend&lt;&amp;'a char&gt; for String&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, A:&nbsp;AllocRef&gt; Extend&lt;&amp;'a str&gt; for String&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A, B&gt; Extend&lt;String&lt;B&gt;&gt; for String&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AllocRef,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AllocRef,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, A&gt; Extend&lt;Cow&lt;'a, str&gt;&gt; for String&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AllocRef,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, A&gt; Extend&lt;T&gt; for Vec&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AllocRef,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;'a + Copy, A&gt; Extend&lt;&amp;'a T&gt; for Vec&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AllocRef,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()